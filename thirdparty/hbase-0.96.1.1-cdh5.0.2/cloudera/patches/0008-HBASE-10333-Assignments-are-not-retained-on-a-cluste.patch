From 952eb1307a85e4d1f3bd7abc88e942afa853c115 Mon Sep 17 00:00:00 2001
From: Jimmy Xiang <jxiang@apache.org>
Date: Fri, 17 Jan 2014 00:18:23 +0000
Subject: [PATCH 08/73] HBASE-10333 Assignments are not retained on a cluster start

Reason: Bug
Author: Jimmy Xiang
Ref: CDH-16792

git-svn-id: https://svn.apache.org/repos/asf/hbase/branches/0.96@1558965 13f79535-47bb-0310-9956-ffa450edef68
---
 .../hadoop/hbase/master/AssignmentManager.java     |   16 +++++++++-------
 .../org/apache/hadoop/hbase/master/HMaster.java    |   17 ++++++++++++-----
 2 files changed, 21 insertions(+), 12 deletions(-)

diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java
index 572de7a..9503da2 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/AssignmentManager.java
@@ -633,17 +633,19 @@ public class AssignmentManager extends ZooKeeperListener {
       }
       // Put it back in transition so that SSH can re-assign it
       regionStates.updateRegionState(regionInfo, State.OFFLINE, sn);
-      // No mater the previous server is online or offline,
-      // we need to reset the last region server of the region.
-      regionStates.setLastRegionServerOfRegion(sn, encodedName);
+
       if (regionInfo.isMetaRegion()) {
         // If it's meta region, reset the meta location.
         // So that master knows the right meta region server.
         MetaRegionTracker.setMetaLocation(watcher, sn);
-      }
-      // Make sure we know the server is dead.
-      if (!serverManager.isServerDead(sn)) {
-        serverManager.expireServer(sn);
+      } else {
+        // No matter the previous server is online or offline,
+        // we need to reset the last region server of the region.
+        regionStates.setLastRegionServerOfRegion(sn, encodedName);
+        // Make sure we know the server is dead.
+        if (!serverManager.isServerDead(sn)) {
+          serverManager.expireServer(sn);
+        }
       }
       return false;
     }
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
index 16d0df2..c25e2d4 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java
@@ -1006,16 +1006,23 @@ MasterServices, Server {
       assigned++;
       if (!rit) {
         // Assign meta since not already in transition
-        if (!serverManager.isServerDead(currentMetaServer)) {
-          LOG.info("Forcing expire of " + currentMetaServer);
-          serverManager.expireServer(currentMetaServer);
+        if (currentMetaServer != null) {
+          // If the meta server is not known to be dead or online,
+          // just split the meta log, and don't expire it since this
+          // could be a full cluster restart. Otherwise, we will think
+          // this is a failover and lose previous region locations.
+          // If it is really a failover case, AM will find out in rebuilding
+          // user regions. Otherwise, we are good since all logs are split
+          // or known to be replayed before user regions are assigned.
+          if (serverManager.isServerOnline(currentMetaServer)) {
+            LOG.info("Forcing expire of " + currentMetaServer);
+            serverManager.expireServer(currentMetaServer);
+          }
           splitMetaLogBeforeAssignment(currentMetaServer);
           if (this.distributedLogReplay) {
             logReplayFailedMetaServer = currentMetaServer;
           }
         }
-        // Make sure assignment manager knows where the meta is,
-        // so that meta sever shutdown handler kicks in.
         assignmentManager.assignMeta();
       }
     } else {
-- 
1.7.0.4

