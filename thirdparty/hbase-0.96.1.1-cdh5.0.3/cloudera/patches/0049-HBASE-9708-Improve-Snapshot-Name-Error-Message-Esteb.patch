From 10fe2eee452bd160ab44ed0ec1aea7cf329526b8 Mon Sep 17 00:00:00 2001
From: Matteo Bertozzi <mbertozzi@apache.org>
Date: Tue, 4 Mar 2014 09:06:33 +0000
Subject: [PATCH 49/73] HBASE-9708 Improve Snapshot Name Error Message (Esteban Gutierrez)

Reason: Improvement
Author: Esteban Gutierrez
Ref: CDH-14719

git-svn-id: https://svn.apache.org/repos/asf/hbase/branches/0.96@1573950 13f79535-47bb-0310-9956-ffa450edef68
---
 .../snapshot/ClientSnapshotDescriptionUtils.java   |    2 +-
 .../java/org/apache/hadoop/hbase/TableName.java    |   36 ++++++++++++++------
 2 files changed, 26 insertions(+), 12 deletions(-)

diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/snapshot/ClientSnapshotDescriptionUtils.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/snapshot/ClientSnapshotDescriptionUtils.java
index 51f48ab..299c309 100644
--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/snapshot/ClientSnapshotDescriptionUtils.java
+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/snapshot/ClientSnapshotDescriptionUtils.java
@@ -39,7 +39,7 @@ public class ClientSnapshotDescriptionUtils {
   public static void assertSnapshotRequestIsValid(HBaseProtos.SnapshotDescription snapshot)
       throws IllegalArgumentException {
     // make sure the snapshot name is valid
-    TableName.isLegalTableQualifierName(Bytes.toBytes(snapshot.getName()));
+    TableName.isLegalTableQualifierName(Bytes.toBytes(snapshot.getName()), true);
     if(snapshot.hasTable()) {
       // make sure the table name is valid, this will implicitly check validity
       TableName tableName = TableName.valueOf(snapshot.getTable());
diff --git a/hbase-common/src/main/java/org/apache/hadoop/hbase/TableName.java b/hbase-common/src/main/java/org/apache/hadoop/hbase/TableName.java
index 4faccef..c83034e 100644
--- a/hbase-common/src/main/java/org/apache/hadoop/hbase/TableName.java
+++ b/hbase-common/src/main/java/org/apache/hadoop/hbase/TableName.java
@@ -145,11 +145,17 @@ public final class TableName implements Comparable<TableName> {
     return tableName;
   }
 
-  public static byte [] isLegalTableQualifierName(final byte[] qualifierName){
-    isLegalTableQualifierName(qualifierName, 0, qualifierName.length);
+  public static byte [] isLegalTableQualifierName(final byte[] qualifierName) {
+    isLegalTableQualifierName(qualifierName, 0, qualifierName.length, false);
     return qualifierName;
   }
 
+  public static byte [] isLegalTableQualifierName(final byte[] qualifierName, boolean isSnapshot) {
+    isLegalTableQualifierName(qualifierName, 0, qualifierName.length, isSnapshot);
+    return qualifierName;
+  }
+
+
   /**
    * Qualifier names can only contain 'word' characters
    * <code>[a-zA-Z_0-9]</code> or '_', '.' or '-'.
@@ -161,15 +167,23 @@ public final class TableName implements Comparable<TableName> {
    */
   public static void isLegalTableQualifierName(final byte[] qualifierName,
                                                 int start,
-                                                int end){
+                                                int end) {
+      isLegalTableQualifierName(qualifierName, start, end, false);
+  }
+
+  public static void isLegalTableQualifierName(final byte[] qualifierName,
+                                                int start,
+                                                int end,
+                                                boolean isSnapshot) {
     if(end - start < 1) {
-      throw new IllegalArgumentException("Table qualifier must not be empty");
+      throw new IllegalArgumentException(isSnapshot ? "Snapshot" : "Table" + " qualifier must not be empty");
     }
 
     if (qualifierName[start] == '.' || qualifierName[start] == '-') {
       throw new IllegalArgumentException("Illegal first character <" + qualifierName[0] +
-          "> at 0. Namespaces can only start with alphanumeric " +
-          "characters': i.e. [a-zA-Z_0-9]: " + Bytes.toString(qualifierName));
+                                         "> at 0. Namespaces can only start with alphanumeric " +
+                                         "characters': i.e. [a-zA-Z_0-9]: " +
+                                         Bytes.toString(qualifierName));
     }
     for (int i = start; i < end; i++) {
       if (Character.isLetterOrDigit(qualifierName[i]) ||
@@ -179,13 +193,13 @@ public final class TableName implements Comparable<TableName> {
         continue;
       }
       throw new IllegalArgumentException("Illegal character code:" + qualifierName[i] +
-        ", <" + (char) qualifierName[i] + "> at " + i +
-          ". User-space table qualifiers can only contain " +
-        "'alphanumeric characters': i.e. [a-zA-Z_0-9-.]: " +
-          Bytes.toString(qualifierName, start, end));
+                                         ", <" + (char) qualifierName[i] + "> at " + i +
+                                         ". " + (isSnapshot ? "snapshot" : "User-space table") +
+                                         " qualifiers can only contain " +
+                                         "'alphanumeric characters': i.e. [a-zA-Z_0-9-.]: " +
+                                         Bytes.toString(qualifierName, start, end));
     }
   }
-
   public static void isLegalNamespaceName(byte[] namespaceName) {
     isLegalNamespaceName(namespaceName, 0, namespaceName.length);
   }
-- 
1.7.0.4

